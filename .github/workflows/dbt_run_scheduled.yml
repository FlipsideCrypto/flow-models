name: dbt_run_scheduled
run-name: dbt_run_scheduled

on:
  workflow_dispatch:
  schedule:
    # 4x/hour schedule = Every 15 minutes (see https://crontab.guru)
    # - cron: "*/15 * * * *"
    # 3x/hour schedule = Every 20 minutes (see https://crontab.guru)
    # - cron: "*/20 * * * *"
    # 2x/hour schedule = Every 30 minutes (see https://crontab.guru)
    - cron: "*/30 * * * *"

env:
  USE_VARS: "${{ vars.USE_VARS }}"
  DBT_PROFILES_DIR: "${{ vars.DBT_PROFILES_DIR }}"
  DBT_VERSION: "${{ vars.DBT_VERSION }}"
  ACCOUNT: "${{ vars.ACCOUNT }}"
  ROLE: "${{ vars.ROLE }}"
  USER: "${{ vars.USER }}"
  PASSWORD: "${{ secrets.PASSWORD }}"
  REGION: "${{ vars.REGION }}"
  DATABASE: "${{ vars.DATABASE }}"
  WAREHOUSE: "${{ vars.WAREHOUSE }}"
  SCHEMA: "${{ vars.SCHEMA }}"

concurrency:
  group: ${{ github.workflow }}
    
jobs:
  run_dbt_jobs:
    runs-on: ubuntu-latest
    environment:
      name: workflow_prod
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: install dependencies
        run: |
          pip install -r requirements.txt
          dbt deps

      - name: Run DBT Jobs
        run: >
          dbt run-operation stage_external_sources --vars "ext_full_refresh: true"; 
          dbt seed; 
          dbt run -s tag:scheduled_core tag:streamline_complete "flow_models,models/gold"

      - name: Store logs
        uses: actions/upload-artifact@v4
        with:
          name: dbt-logs
          path: |
            logs
            target

  notify-failure:
    needs: [run_dbt_jobs]
    if: failure()
    uses: ./.github/workflows/slack_notify.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
